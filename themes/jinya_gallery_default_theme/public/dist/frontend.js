'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Utility class for DOM manipulation
 */
var HtmlUtils = function () {
  function HtmlUtils() {
    _classCallCheck(this, HtmlUtils);
  }

  _createClass(HtmlUtils, null, [{
    key: 'htmlToElement',

    /**
     * Converts the given html string into a node
     * @param {string} html
     * @returns {Node}
     */
    value: function htmlToElement(html) {
      var range = document.createRange();
      range.selectNode(document.querySelector('body'));
      return range.createContextualFragment(html).firstElementChild;
    }
  }]);

  return HtmlUtils;
}();
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var i18n = function () {
    function i18n() {
        _classCallCheck(this, i18n);
    }

    _createClass(i18n, null, [{
        key: "getText",

        /**
         * Gets the text for the specified identifier
         * @param identifier string
         */
        value: function getText(identifier) {
            return texts[identifier];
        }
    }]);

    return i18n;
}();
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var JSONTools = function () {
    function JSONTools() {
        _classCallCheck(this, JSONTools);
    }

    _createClass(JSONTools, null, [{
        key: 'jsonStringifyWithoutCycle',

        /**
         * Code from https://stackoverflow.com/a/24075430
         */
        value: function jsonStringifyWithoutCycle(obj, replacer, space) {
            var cache = [];
            var json = JSON.stringify(obj, function (key, value) {
                if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {
                    if (cache.indexOf(value) !== -1) {
                        // circular reference found, discard key
                        return;
                    }
                    // store value in our collection
                    cache.push(value);
                }
                return replacer ? replacer(key, value) : value;
            }, space);
            cache = null;
            return json;
        }
    }]);

    return JSONTools;
}();
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.PerfectScrollbar = e();
}(undefined, function () {
  "use strict";
  function t(t) {
    return getComputedStyle(t);
  }function e(t, e) {
    for (var i in e) {
      var r = e[i];"number" == typeof r && (r += "px"), t.style[i] = r;
    }return t;
  }function i(t) {
    var e = document.createElement("div");return e.className = t, e;
  }function r(t, e) {
    if (!v) throw new Error("No element matching method supported");return v.call(t, e);
  }function l(t) {
    t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t);
  }function n(t, e) {
    return Array.prototype.filter.call(t.children, function (t) {
      return r(t, e);
    });
  }function o(t, e) {
    var i = t.element.classList,
        r = m.state.scrolling(e);i.contains(r) ? clearTimeout(Y[e]) : i.add(r);
  }function s(t, e) {
    Y[e] = setTimeout(function () {
      return t.isAlive && t.element.classList.remove(m.state.scrolling(e));
    }, t.settings.scrollingThreshold);
  }function a(t, e) {
    o(t, e), s(t, e);
  }function c(t) {
    if ("function" == typeof window.CustomEvent) return new CustomEvent(t);var e = document.createEvent("CustomEvent");return e.initCustomEvent(t, !1, !1, void 0), e;
  }function h(t, e, i, r, l) {
    var n = i[0],
        o = i[1],
        s = i[2],
        h = i[3],
        u = i[4],
        d = i[5];void 0 === r && (r = !0), void 0 === l && (l = !1);var f = t.element;t.reach[h] = null, f[s] < 1 && (t.reach[h] = "start"), f[s] > t[n] - t[o] - 1 && (t.reach[h] = "end"), e && (f.dispatchEvent(c("ps-scroll-" + h)), e < 0 ? f.dispatchEvent(c("ps-scroll-" + u)) : e > 0 && f.dispatchEvent(c("ps-scroll-" + d)), r && a(t, h)), t.reach[h] && (e || l) && f.dispatchEvent(c("ps-" + h + "-reach-" + t.reach[h]));
  }function u(t) {
    return parseInt(t, 10) || 0;
  }function d(t) {
    return r(t, "input,[contenteditable]") || r(t, "select,[contenteditable]") || r(t, "textarea,[contenteditable]") || r(t, "button,[contenteditable]");
  }function f(e) {
    var i = t(e);return u(i.width) + u(i.paddingLeft) + u(i.paddingRight) + u(i.borderLeftWidth) + u(i.borderRightWidth);
  }function p(t, e) {
    return t.settings.minScrollbarLength && (e = Math.max(e, t.settings.minScrollbarLength)), t.settings.maxScrollbarLength && (e = Math.min(e, t.settings.maxScrollbarLength)), e;
  }function b(t, i) {
    var r = { width: i.railXWidth };i.isRtl ? r.left = i.negativeScrollAdjustment + t.scrollLeft + i.containerWidth - i.contentWidth : r.left = t.scrollLeft, i.isScrollbarXUsingBottom ? r.bottom = i.scrollbarXBottom - t.scrollTop : r.top = i.scrollbarXTop + t.scrollTop, e(i.scrollbarXRail, r);var l = { top: t.scrollTop, height: i.railYHeight };i.isScrollbarYUsingRight ? i.isRtl ? l.right = i.contentWidth - (i.negativeScrollAdjustment + t.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth : l.right = i.scrollbarYRight - t.scrollLeft : i.isRtl ? l.left = i.negativeScrollAdjustment + t.scrollLeft + 2 * i.containerWidth - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth : l.left = i.scrollbarYLeft + t.scrollLeft, e(i.scrollbarYRail, l), e(i.scrollbarX, { left: i.scrollbarXLeft, width: i.scrollbarXWidth - i.railBorderXWidth }), e(i.scrollbarY, { top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth });
  }function g(t, e) {
    function i(e) {
      p[d] = b + v * (e[a] - g), o(t, f), T(t), e.stopPropagation(), e.preventDefault();
    }function r() {
      s(t, f), t.event.unbind(t.ownerDocument, "mousemove", i);
    }var l = e[0],
        n = e[1],
        a = e[2],
        c = e[3],
        h = e[4],
        u = e[5],
        d = e[6],
        f = e[7],
        p = t.element,
        b = null,
        g = null,
        v = null;t.event.bind(t[h], "mousedown", function (e) {
      b = p[d], g = e[a], v = (t[n] - t[l]) / (t[c] - t[u]), t.event.bind(t.ownerDocument, "mousemove", i), t.event.once(t.ownerDocument, "mouseup", r), e.stopPropagation(), e.preventDefault();
    });
  }var v = "undefined" != typeof Element && (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.msMatchesSelector),
      m = { main: "ps", element: { thumb: function thumb(t) {
        return "ps__thumb-" + t;
      }, rail: function rail(t) {
        return "ps__rail-" + t;
      }, consuming: "ps__child--consume" }, state: { focus: "ps--focus", active: function active(t) {
        return "ps--active-" + t;
      }, scrolling: function scrolling(t) {
        return "ps--scrolling-" + t;
      } } },
      Y = { x: null, y: null },
      X = function X(t) {
    this.element = t, this.handlers = {};
  },
      w = { isEmpty: { configurable: !0 } };X.prototype.bind = function (t, e) {
    void 0 === this.handlers[t] && (this.handlers[t] = []), this.handlers[t].push(e), this.element.addEventListener(t, e, !1);
  }, X.prototype.unbind = function (t, e) {
    var i = this;this.handlers[t] = this.handlers[t].filter(function (r) {
      return !(!e || r === e) || (i.element.removeEventListener(t, r, !1), !1);
    });
  }, X.prototype.unbindAll = function () {
    var t = this;for (var e in t.handlers) {
      t.unbind(e);
    }
  }, w.isEmpty.get = function () {
    var t = this;return Object.keys(this.handlers).every(function (e) {
      return 0 === t.handlers[e].length;
    });
  }, Object.defineProperties(X.prototype, w);var y = function y() {
    this.eventElements = [];
  };y.prototype.eventElement = function (t) {
    var e = this.eventElements.filter(function (e) {
      return e.element === t;
    })[0];return e || (e = new X(t), this.eventElements.push(e)), e;
  }, y.prototype.bind = function (t, e, i) {
    this.eventElement(t).bind(e, i);
  }, y.prototype.unbind = function (t, e, i) {
    var r = this.eventElement(t);r.unbind(e, i), r.isEmpty && this.eventElements.splice(this.eventElements.indexOf(r), 1);
  }, y.prototype.unbindAll = function () {
    this.eventElements.forEach(function (t) {
      return t.unbindAll();
    }), this.eventElements = [];
  }, y.prototype.once = function (t, e, i) {
    var r = this.eventElement(t),
        l = function l(t) {
      r.unbind(e, l), i(t);
    };r.bind(e, l);
  };var W = function W(t, e, i, r, l) {
    void 0 === r && (r = !0), void 0 === l && (l = !1);var n;if ("top" === e) n = ["contentHeight", "containerHeight", "scrollTop", "y", "up", "down"];else {
      if ("left" !== e) throw new Error("A proper axis should be provided");n = ["contentWidth", "containerWidth", "scrollLeft", "x", "left", "right"];
    }h(t, i, n, r, l);
  },
      L = { isWebKit: "undefined" != typeof document && "WebkitAppearance" in document.documentElement.style, supportsTouch: "undefined" != typeof window && ("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch), supportsIePointer: "undefined" != typeof navigator && navigator.msMaxTouchPoints, isChrome: "undefined" != typeof navigator && /Chrome/i.test(navigator && navigator.userAgent) },
      T = function T(t) {
    var e = t.element;t.containerWidth = e.clientWidth, t.containerHeight = e.clientHeight, t.contentWidth = e.scrollWidth, t.contentHeight = e.scrollHeight, e.contains(t.scrollbarXRail) || (n(e, m.element.rail("x")).forEach(function (t) {
      return l(t);
    }), e.appendChild(t.scrollbarXRail)), e.contains(t.scrollbarYRail) || (n(e, m.element.rail("y")).forEach(function (t) {
      return l(t);
    }), e.appendChild(t.scrollbarYRail)), !t.settings.suppressScrollX && t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth ? (t.scrollbarXActive = !0, t.railXWidth = t.containerWidth - t.railXMarginWidth, t.railXRatio = t.containerWidth / t.railXWidth, t.scrollbarXWidth = p(t, u(t.railXWidth * t.containerWidth / t.contentWidth)), t.scrollbarXLeft = u((t.negativeScrollAdjustment + e.scrollLeft) * (t.railXWidth - t.scrollbarXWidth) / (t.contentWidth - t.containerWidth))) : t.scrollbarXActive = !1, !t.settings.suppressScrollY && t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight ? (t.scrollbarYActive = !0, t.railYHeight = t.containerHeight - t.railYMarginHeight, t.railYRatio = t.containerHeight / t.railYHeight, t.scrollbarYHeight = p(t, u(t.railYHeight * t.containerHeight / t.contentHeight)), t.scrollbarYTop = u(e.scrollTop * (t.railYHeight - t.scrollbarYHeight) / (t.contentHeight - t.containerHeight))) : t.scrollbarYActive = !1, t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth && (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth), t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight && (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight), b(e, t), t.scrollbarXActive ? e.classList.add(m.state.active("x")) : (e.classList.remove(m.state.active("x")), t.scrollbarXWidth = 0, t.scrollbarXLeft = 0, e.scrollLeft = 0), t.scrollbarYActive ? e.classList.add(m.state.active("y")) : (e.classList.remove(m.state.active("y")), t.scrollbarYHeight = 0, t.scrollbarYTop = 0, e.scrollTop = 0);
  },
      R = { "click-rail": function clickRail(t) {
      t.event.bind(t.scrollbarY, "mousedown", function (t) {
        return t.stopPropagation();
      }), t.event.bind(t.scrollbarYRail, "mousedown", function (e) {
        var i = e.pageY - window.pageYOffset - t.scrollbarYRail.getBoundingClientRect().top > t.scrollbarYTop ? 1 : -1;t.element.scrollTop += i * t.containerHeight, T(t), e.stopPropagation();
      }), t.event.bind(t.scrollbarX, "mousedown", function (t) {
        return t.stopPropagation();
      }), t.event.bind(t.scrollbarXRail, "mousedown", function (e) {
        var i = e.pageX - window.pageXOffset - t.scrollbarXRail.getBoundingClientRect().left > t.scrollbarXLeft ? 1 : -1;t.element.scrollLeft += i * t.containerWidth, T(t), e.stopPropagation();
      });
    }, "drag-thumb": function dragThumb(t) {
      g(t, ["containerWidth", "contentWidth", "pageX", "railXWidth", "scrollbarX", "scrollbarXWidth", "scrollLeft", "x"]), g(t, ["containerHeight", "contentHeight", "pageY", "railYHeight", "scrollbarY", "scrollbarYHeight", "scrollTop", "y"]);
    }, keyboard: function keyboard(t) {
      function e(e, r) {
        var l = i.scrollTop;if (0 === e) {
          if (!t.scrollbarYActive) return !1;if (0 === l && r > 0 || l >= t.contentHeight - t.containerHeight && r < 0) return !t.settings.wheelPropagation;
        }var n = i.scrollLeft;if (0 === r) {
          if (!t.scrollbarXActive) return !1;if (0 === n && e < 0 || n >= t.contentWidth - t.containerWidth && e > 0) return !t.settings.wheelPropagation;
        }return !0;
      }var i = t.element,
          l = function l() {
        return r(i, ":hover");
      },
          n = function n() {
        return r(t.scrollbarX, ":focus") || r(t.scrollbarY, ":focus");
      };t.event.bind(t.ownerDocument, "keydown", function (r) {
        if (!(r.isDefaultPrevented && r.isDefaultPrevented() || r.defaultPrevented) && (l() || n())) {
          var o = document.activeElement ? document.activeElement : t.ownerDocument.activeElement;if (o) {
            if ("IFRAME" === o.tagName) o = o.contentDocument.activeElement;else for (; o.shadowRoot;) {
              o = o.shadowRoot.activeElement;
            }if (d(o)) return;
          }var s = 0,
              a = 0;switch (r.which) {case 37:
              s = r.metaKey ? -t.contentWidth : r.altKey ? -t.containerWidth : -30;break;case 38:
              a = r.metaKey ? t.contentHeight : r.altKey ? t.containerHeight : 30;break;case 39:
              s = r.metaKey ? t.contentWidth : r.altKey ? t.containerWidth : 30;break;case 40:
              a = r.metaKey ? -t.contentHeight : r.altKey ? -t.containerHeight : -30;break;case 32:
              a = r.shiftKey ? t.containerHeight : -t.containerHeight;break;case 33:
              a = t.containerHeight;break;case 34:
              a = -t.containerHeight;break;case 36:
              a = t.contentHeight;break;case 35:
              a = -t.contentHeight;break;default:
              return;}t.settings.suppressScrollX && 0 !== s || t.settings.suppressScrollY && 0 !== a || (i.scrollTop -= a, i.scrollLeft += s, T(t), e(s, a) && r.preventDefault());
        }
      });
    }, wheel: function wheel(e) {
      function i(t, i) {
        var r = 0 === o.scrollTop,
            l = o.scrollTop + o.offsetHeight === o.scrollHeight,
            n = 0 === o.scrollLeft,
            s = o.scrollLeft + o.offsetWidth === o.offsetWidth;return !(Math.abs(i) > Math.abs(t) ? r || l : n || s) || !e.settings.wheelPropagation;
      }function r(t) {
        var e = t.deltaX,
            i = -1 * t.deltaY;return void 0 !== e && void 0 !== i || (e = -1 * t.wheelDeltaX / 6, i = t.wheelDeltaY / 6), t.deltaMode && 1 === t.deltaMode && (e *= 10, i *= 10), e !== e && i !== i && (e = 0, i = t.wheelDelta), t.shiftKey ? [-i, -e] : [e, i];
      }function l(e, i, r) {
        if (!L.isWebKit && o.querySelector("select:focus")) return !0;if (!o.contains(e)) return !1;for (var l = e; l && l !== o;) {
          if (l.classList.contains(m.element.consuming)) return !0;var n = t(l);if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
            var s = l.scrollHeight - l.clientHeight;if (s > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === s && r < 0)) return !0;var a = l.scrollLeft - l.clientWidth;if (a > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === a && i > 0)) return !0;
          }l = l.parentNode;
        }return !1;
      }function n(t) {
        var n = r(t),
            s = n[0],
            a = n[1];if (!l(t.target, s, a)) {
          var c = !1;e.settings.useBothWheelAxes ? e.scrollbarYActive && !e.scrollbarXActive ? (a ? o.scrollTop -= a * e.settings.wheelSpeed : o.scrollTop += s * e.settings.wheelSpeed, c = !0) : e.scrollbarXActive && !e.scrollbarYActive && (s ? o.scrollLeft += s * e.settings.wheelSpeed : o.scrollLeft -= a * e.settings.wheelSpeed, c = !0) : (o.scrollTop -= a * e.settings.wheelSpeed, o.scrollLeft += s * e.settings.wheelSpeed), T(e), (c = c || i(s, a)) && !t.ctrlKey && (t.stopPropagation(), t.preventDefault());
        }
      }var o = e.element;void 0 !== window.onwheel ? e.event.bind(o, "wheel", n) : void 0 !== window.onmousewheel && e.event.bind(o, "mousewheel", n);
    }, touch: function touch(e) {
      function i(t, i) {
        var r = h.scrollTop,
            l = h.scrollLeft,
            n = Math.abs(t),
            o = Math.abs(i);if (o > n) {
          if (i < 0 && r === e.contentHeight - e.containerHeight || i > 0 && 0 === r) return 0 === window.scrollY && i > 0 && L.isChrome;
        } else if (n > o && (t < 0 && l === e.contentWidth - e.containerWidth || t > 0 && 0 === l)) return !0;return !0;
      }function r(t, i) {
        h.scrollTop -= i, h.scrollLeft -= t, T(e);
      }function l(t) {
        return t.targetTouches ? t.targetTouches[0] : t;
      }function n(t) {
        return !(t.pointerType && "pen" === t.pointerType && 0 === t.buttons || (!t.targetTouches || 1 !== t.targetTouches.length) && (!t.pointerType || "mouse" === t.pointerType || t.pointerType === t.MSPOINTER_TYPE_MOUSE));
      }function o(t) {
        if (n(t)) {
          var e = l(t);u.pageX = e.pageX, u.pageY = e.pageY, d = new Date().getTime(), null !== p && clearInterval(p);
        }
      }function s(e, i, r) {
        if (!h.contains(e)) return !1;for (var l = e; l && l !== h;) {
          if (l.classList.contains(m.element.consuming)) return !0;var n = t(l);if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
            var o = l.scrollHeight - l.clientHeight;if (o > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === o && r < 0)) return !0;var s = l.scrollLeft - l.clientWidth;if (s > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === s && i > 0)) return !0;
          }l = l.parentNode;
        }return !1;
      }function a(t) {
        if (n(t)) {
          var e = l(t),
              o = { pageX: e.pageX, pageY: e.pageY },
              a = o.pageX - u.pageX,
              c = o.pageY - u.pageY;if (s(t.target, a, c)) return;r(a, c), u = o;var h = new Date().getTime(),
              p = h - d;p > 0 && (f.x = a / p, f.y = c / p, d = h), i(a, c) && t.preventDefault();
        }
      }function c() {
        e.settings.swipeEasing && (clearInterval(p), p = setInterval(function () {
          e.isInitialized ? clearInterval(p) : f.x || f.y ? Math.abs(f.x) < .01 && Math.abs(f.y) < .01 ? clearInterval(p) : (r(30 * f.x, 30 * f.y), f.x *= .8, f.y *= .8) : clearInterval(p);
        }, 10));
      }if (L.supportsTouch || L.supportsIePointer) {
        var h = e.element,
            u = {},
            d = 0,
            f = {},
            p = null;L.supportsTouch ? (e.event.bind(h, "touchstart", o), e.event.bind(h, "touchmove", a), e.event.bind(h, "touchend", c)) : L.supportsIePointer && (window.PointerEvent ? (e.event.bind(h, "pointerdown", o), e.event.bind(h, "pointermove", a), e.event.bind(h, "pointerup", c)) : window.MSPointerEvent && (e.event.bind(h, "MSPointerDown", o), e.event.bind(h, "MSPointerMove", a), e.event.bind(h, "MSPointerUp", c)));
      }
    } },
      H = function H(r, l) {
    var n = this;if (void 0 === l && (l = {}), "string" == typeof r && (r = document.querySelector(r)), !r || !r.nodeName) throw new Error("no element is specified to initialize PerfectScrollbar");this.element = r, r.classList.add(m.main), this.settings = { handlers: ["click-rail", "drag-thumb", "keyboard", "wheel", "touch"], maxScrollbarLength: null, minScrollbarLength: null, scrollingThreshold: 1e3, scrollXMarginOffset: 0, scrollYMarginOffset: 0, suppressScrollX: !1, suppressScrollY: !1, swipeEasing: !0, useBothWheelAxes: !1, wheelPropagation: !1, wheelSpeed: 1 };for (var o in l) {
      n.settings[o] = l[o];
    }this.containerWidth = null, this.containerHeight = null, this.contentWidth = null, this.contentHeight = null;var s = function s() {
      return r.classList.add(m.state.focus);
    },
        a = function a() {
      return r.classList.remove(m.state.focus);
    };this.isRtl = "rtl" === t(r).direction, this.isNegativeScroll = function () {
      var t = r.scrollLeft,
          e = null;return r.scrollLeft = -1, e = r.scrollLeft < 0, r.scrollLeft = t, e;
    }(), this.negativeScrollAdjustment = this.isNegativeScroll ? r.scrollWidth - r.clientWidth : 0, this.event = new y(), this.ownerDocument = r.ownerDocument || document, this.scrollbarXRail = i(m.element.rail("x")), r.appendChild(this.scrollbarXRail), this.scrollbarX = i(m.element.thumb("x")), this.scrollbarXRail.appendChild(this.scrollbarX), this.scrollbarX.setAttribute("tabindex", 0), this.event.bind(this.scrollbarX, "focus", s), this.event.bind(this.scrollbarX, "blur", a), this.scrollbarXActive = null, this.scrollbarXWidth = null, this.scrollbarXLeft = null;var c = t(this.scrollbarXRail);this.scrollbarXBottom = parseInt(c.bottom, 10), isNaN(this.scrollbarXBottom) ? (this.isScrollbarXUsingBottom = !1, this.scrollbarXTop = u(c.top)) : this.isScrollbarXUsingBottom = !0, this.railBorderXWidth = u(c.borderLeftWidth) + u(c.borderRightWidth), e(this.scrollbarXRail, { display: "block" }), this.railXMarginWidth = u(c.marginLeft) + u(c.marginRight), e(this.scrollbarXRail, { display: "" }), this.railXWidth = null, this.railXRatio = null, this.scrollbarYRail = i(m.element.rail("y")), r.appendChild(this.scrollbarYRail), this.scrollbarY = i(m.element.thumb("y")), this.scrollbarYRail.appendChild(this.scrollbarY), this.scrollbarY.setAttribute("tabindex", 0), this.event.bind(this.scrollbarY, "focus", s), this.event.bind(this.scrollbarY, "blur", a), this.scrollbarYActive = null, this.scrollbarYHeight = null, this.scrollbarYTop = null;var h = t(this.scrollbarYRail);this.scrollbarYRight = parseInt(h.right, 10), isNaN(this.scrollbarYRight) ? (this.isScrollbarYUsingRight = !1, this.scrollbarYLeft = u(h.left)) : this.isScrollbarYUsingRight = !0, this.scrollbarYOuterWidth = this.isRtl ? f(this.scrollbarY) : null, this.railBorderYWidth = u(h.borderTopWidth) + u(h.borderBottomWidth), e(this.scrollbarYRail, { display: "block" }), this.railYMarginHeight = u(h.marginTop) + u(h.marginBottom), e(this.scrollbarYRail, { display: "" }), this.railYHeight = null, this.railYRatio = null, this.reach = { x: r.scrollLeft <= 0 ? "start" : r.scrollLeft >= this.contentWidth - this.containerWidth ? "end" : null, y: r.scrollTop <= 0 ? "start" : r.scrollTop >= this.contentHeight - this.containerHeight ? "end" : null }, this.isAlive = !0, this.settings.handlers.forEach(function (t) {
      return R[t](n);
    }), this.lastScrollTop = r.scrollTop, this.lastScrollLeft = r.scrollLeft, this.event.bind(this.element, "scroll", function (t) {
      return n.onScroll(t);
    }), T(this);
  };return H.prototype.update = function () {
    this.isAlive && (this.negativeScrollAdjustment = this.isNegativeScroll ? this.element.scrollWidth - this.element.clientWidth : 0, e(this.scrollbarXRail, { display: "block" }), e(this.scrollbarYRail, { display: "block" }), this.railXMarginWidth = u(t(this.scrollbarXRail).marginLeft) + u(t(this.scrollbarXRail).marginRight), this.railYMarginHeight = u(t(this.scrollbarYRail).marginTop) + u(t(this.scrollbarYRail).marginBottom), e(this.scrollbarXRail, { display: "none" }), e(this.scrollbarYRail, { display: "none" }), T(this), W(this, "top", 0, !1, !0), W(this, "left", 0, !1, !0), e(this.scrollbarXRail, { display: "" }), e(this.scrollbarYRail, { display: "" }));
  }, H.prototype.onScroll = function (t) {
    this.isAlive && (T(this), W(this, "top", this.element.scrollTop - this.lastScrollTop), W(this, "left", this.element.scrollLeft - this.lastScrollLeft), this.lastScrollTop = this.element.scrollTop, this.lastScrollLeft = this.element.scrollLeft);
  }, H.prototype.destroy = function () {
    this.isAlive && (this.event.unbindAll(), l(this.scrollbarX), l(this.scrollbarY), l(this.scrollbarXRail), l(this.scrollbarYRail), this.removePsClasses(), this.element = null, this.scrollbarX = null, this.scrollbarY = null, this.scrollbarXRail = null, this.scrollbarYRail = null, this.isAlive = !1);
  }, H.prototype.removePsClasses = function () {
    this.element.className = this.element.className.split(" ").filter(function (t) {
      return !t.match(/^ps([-_].+|)$/);
    }).join(" ");
  }, H;
});
'use strict';

(function () {
    var scrollItem = document.querySelector('.horizontal');
    if (scrollItem) {
        scrollItem.addEventListener('wheel', function (e) {
            if (!e.deltaX) {
                scrollItem.scrollBy({
                    behavior: 'auto',
                    left: e.deltaY > 0 ? 100 : -100
                });
            }
        });
    }

    var scrolls = document.querySelectorAll('[data-scroll]');
    scrolls.forEach(function (item) {
        new PerfectScrollbar(item);
    });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0bWxVdGlscy5qcyIsImkxOG4uanMiLCJKU09OVG9vbHMuanMiLCJwZXJmZWN0LXNjcm9sbGJhci5qcyIsInNjcm9sbGhlbHBlci5qcyJdLCJuYW1lcyI6WyJIdG1sVXRpbHMiLCJodG1sIiwicmFuZ2UiLCJkb2N1bWVudCIsImNyZWF0ZVJhbmdlIiwic2VsZWN0Tm9kZSIsInF1ZXJ5U2VsZWN0b3IiLCJjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImkxOG4iLCJpZGVudGlmaWVyIiwidGV4dHMiLCJKU09OVG9vbHMiLCJvYmoiLCJyZXBsYWNlciIsInNwYWNlIiwiY2FjaGUiLCJqc29uIiwiSlNPTiIsInN0cmluZ2lmeSIsImtleSIsInZhbHVlIiwiaW5kZXhPZiIsInB1c2giLCJ0IiwiZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJQZXJmZWN0U2Nyb2xsYmFyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImkiLCJyIiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidiIsIkVycm9yIiwiY2FsbCIsImwiLCJyZW1vdmUiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJuIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJmaWx0ZXIiLCJjaGlsZHJlbiIsIm8iLCJlbGVtZW50IiwiY2xhc3NMaXN0IiwibSIsInN0YXRlIiwic2Nyb2xsaW5nIiwiY29udGFpbnMiLCJjbGVhclRpbWVvdXQiLCJZIiwiYWRkIiwicyIsInNldFRpbWVvdXQiLCJpc0FsaXZlIiwic2V0dGluZ3MiLCJzY3JvbGxpbmdUaHJlc2hvbGQiLCJhIiwiYyIsIndpbmRvdyIsIkN1c3RvbUV2ZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJoIiwidSIsImQiLCJmIiwicmVhY2giLCJkaXNwYXRjaEV2ZW50IiwicGFyc2VJbnQiLCJ3aWR0aCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiYm9yZGVyTGVmdFdpZHRoIiwiYm9yZGVyUmlnaHRXaWR0aCIsInAiLCJtaW5TY3JvbGxiYXJMZW5ndGgiLCJNYXRoIiwibWF4IiwibWF4U2Nyb2xsYmFyTGVuZ3RoIiwibWluIiwiYiIsInJhaWxYV2lkdGgiLCJpc1J0bCIsImxlZnQiLCJuZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQiLCJzY3JvbGxMZWZ0IiwiY29udGFpbmVyV2lkdGgiLCJjb250ZW50V2lkdGgiLCJpc1Njcm9sbGJhclhVc2luZ0JvdHRvbSIsImJvdHRvbSIsInNjcm9sbGJhclhCb3R0b20iLCJzY3JvbGxUb3AiLCJ0b3AiLCJzY3JvbGxiYXJYVG9wIiwic2Nyb2xsYmFyWFJhaWwiLCJoZWlnaHQiLCJyYWlsWUhlaWdodCIsImlzU2Nyb2xsYmFyWVVzaW5nUmlnaHQiLCJyaWdodCIsInNjcm9sbGJhcllSaWdodCIsInNjcm9sbGJhcllPdXRlcldpZHRoIiwic2Nyb2xsYmFyWUxlZnQiLCJzY3JvbGxiYXJZUmFpbCIsInNjcm9sbGJhclgiLCJzY3JvbGxiYXJYTGVmdCIsInNjcm9sbGJhclhXaWR0aCIsInJhaWxCb3JkZXJYV2lkdGgiLCJzY3JvbGxiYXJZIiwic2Nyb2xsYmFyWVRvcCIsInNjcm9sbGJhcllIZWlnaHQiLCJyYWlsQm9yZGVyWVdpZHRoIiwiZyIsIlQiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsImV2ZW50IiwidW5iaW5kIiwib3duZXJEb2N1bWVudCIsImJpbmQiLCJvbmNlIiwiRWxlbWVudCIsIm1hdGNoZXMiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsIm1haW4iLCJ0aHVtYiIsInJhaWwiLCJjb25zdW1pbmciLCJmb2N1cyIsImFjdGl2ZSIsIngiLCJ5IiwiWCIsImhhbmRsZXJzIiwidyIsImlzRW1wdHkiLCJjb25maWd1cmFibGUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInVuYmluZEFsbCIsImdldCIsIk9iamVjdCIsImtleXMiLCJldmVyeSIsImxlbmd0aCIsImRlZmluZVByb3BlcnRpZXMiLCJldmVudEVsZW1lbnRzIiwiZXZlbnRFbGVtZW50Iiwic3BsaWNlIiwiZm9yRWFjaCIsIlciLCJMIiwiaXNXZWJLaXQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdXBwb3J0c1RvdWNoIiwiRG9jdW1lbnRUb3VjaCIsInN1cHBvcnRzSWVQb2ludGVyIiwibmF2aWdhdG9yIiwibXNNYXhUb3VjaFBvaW50cyIsImlzQ2hyb21lIiwidGVzdCIsInVzZXJBZ2VudCIsImNsaWVudFdpZHRoIiwiY29udGFpbmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0Iiwic2Nyb2xsV2lkdGgiLCJjb250ZW50SGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwiYXBwZW5kQ2hpbGQiLCJzdXBwcmVzc1Njcm9sbFgiLCJzY3JvbGxYTWFyZ2luT2Zmc2V0Iiwic2Nyb2xsYmFyWEFjdGl2ZSIsInJhaWxYTWFyZ2luV2lkdGgiLCJyYWlsWFJhdGlvIiwic3VwcHJlc3NTY3JvbGxZIiwic2Nyb2xsWU1hcmdpbk9mZnNldCIsInNjcm9sbGJhcllBY3RpdmUiLCJyYWlsWU1hcmdpbkhlaWdodCIsInJhaWxZUmF0aW8iLCJSIiwicGFnZVkiLCJwYWdlWU9mZnNldCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInBhZ2VYIiwicGFnZVhPZmZzZXQiLCJrZXlib2FyZCIsIndoZWVsUHJvcGFnYXRpb24iLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwiYWN0aXZlRWxlbWVudCIsInRhZ05hbWUiLCJjb250ZW50RG9jdW1lbnQiLCJzaGFkb3dSb290Iiwid2hpY2giLCJtZXRhS2V5IiwiYWx0S2V5Iiwic2hpZnRLZXkiLCJ3aGVlbCIsIm9mZnNldEhlaWdodCIsIm9mZnNldFdpZHRoIiwiYWJzIiwiZGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVgiLCJ3aGVlbERlbHRhWSIsImRlbHRhTW9kZSIsIndoZWVsRGVsdGEiLCJvdmVyZmxvdyIsIm92ZXJmbG93WCIsIm92ZXJmbG93WSIsImpvaW4iLCJtYXRjaCIsInRhcmdldCIsInVzZUJvdGhXaGVlbEF4ZXMiLCJ3aGVlbFNwZWVkIiwiY3RybEtleSIsIm9ud2hlZWwiLCJvbm1vdXNld2hlZWwiLCJ0b3VjaCIsInNjcm9sbFkiLCJ0YXJnZXRUb3VjaGVzIiwicG9pbnRlclR5cGUiLCJidXR0b25zIiwiTVNQT0lOVEVSX1RZUEVfTU9VU0UiLCJEYXRlIiwiZ2V0VGltZSIsImNsZWFySW50ZXJ2YWwiLCJzd2lwZUVhc2luZyIsInNldEludGVydmFsIiwiaXNJbml0aWFsaXplZCIsIlBvaW50ZXJFdmVudCIsIk1TUG9pbnRlckV2ZW50IiwiSCIsIm5vZGVOYW1lIiwiZGlyZWN0aW9uIiwiaXNOZWdhdGl2ZVNjcm9sbCIsInNldEF0dHJpYnV0ZSIsImlzTmFOIiwiZGlzcGxheSIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iLCJsYXN0U2Nyb2xsVG9wIiwibGFzdFNjcm9sbExlZnQiLCJvblNjcm9sbCIsInVwZGF0ZSIsImRlc3Ryb3kiLCJyZW1vdmVQc0NsYXNzZXMiLCJzcGxpdCIsInNjcm9sbEl0ZW0iLCJzY3JvbGxCeSIsImJlaGF2aW9yIiwic2Nyb2xscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpdGVtIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0lBR01BLFM7Ozs7Ozs7O0FBQ0Y7Ozs7O2tDQUtxQkMsSSxFQUFNO0FBQ3ZCLFVBQU1DLFFBQVFDLFNBQVNDLFdBQVQsRUFBZDtBQUNBRixZQUFNRyxVQUFOLENBQWlCRixTQUFTRyxhQUFULENBQXVCLE1BQXZCLENBQWpCO0FBQ0EsYUFBT0osTUFBTUssd0JBQU4sQ0FBK0JOLElBQS9CLEVBQXFDTyxpQkFBNUM7QUFDSDs7Ozs7Ozs7Ozs7SUNiQ0MsSTs7Ozs7Ozs7QUFDRjs7OztnQ0FJZUMsVSxFQUFZO0FBQ3ZCLG1CQUFPQyxNQUFNRCxV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LFNBQWIsQ0FBdUIrTixLQUF2QixDQUE2QixHQUE3QixFQUFrQ3BOLE1BQWxDLENBQXlDLFVBQVN2QixDQUFULEVBQVc7QUFBQyxhQUFNLENBQUNBLEVBQUVtTSxLQUFGLENBQVEsZUFBUixDQUFQO0FBQWdDLEtBQXJGLEVBQXVGRCxJQUF2RixDQUE0RixHQUE1RixDQUF2QjtBQUF3SCxHQUEzMEMsRUFBNDBDc0IsQ0FBbjFDO0FBQXExQyxDQUFwaWpCLENBQUQ7OztBQ0FDLGFBQVk7QUFDVCxRQUFNb0IsYUFBYWpRLFNBQVNHLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBbkI7QUFDQSxRQUFJOFAsVUFBSixFQUFnQjtBQUNaQSxtQkFBV25ILGdCQUFYLENBQTRCLE9BQTVCLEVBQXFDLFVBQUN4SCxDQUFELEVBQU87QUFDeEMsZ0JBQUksQ0FBQ0EsRUFBRXdMLE1BQVAsRUFBZTtBQUNYbUQsMkJBQVdDLFFBQVgsQ0FBb0I7QUFDaEJDLDhCQUFVLE1BRE07QUFFaEIzSywwQkFBTWxFLEVBQUV5TCxNQUFGLEdBQVcsQ0FBWCxHQUFlLEdBQWYsR0FBcUIsQ0FBQztBQUZaLGlCQUFwQjtBQUlIO0FBQ0osU0FQRDtBQVFIOztBQUVELFFBQU1xRCxVQUFVcFEsU0FBU3FRLGdCQUFULENBQTBCLGVBQTFCLENBQWhCO0FBQ0FELFlBQVExRyxPQUFSLENBQWdCLFVBQUM0RyxJQUFELEVBQVU7QUFDdEIsWUFBSTNPLGdCQUFKLENBQXFCMk8sSUFBckI7QUFDSCxLQUZEO0FBR0gsQ0FqQkEsR0FBRCIsImZpbGUiOiJmcm9udGVuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBVdGlsaXR5IGNsYXNzIGZvciBET00gbWFuaXB1bGF0aW9uXHJcbiAqL1xyXG5jbGFzcyBIdG1sVXRpbHMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyB0aGUgZ2l2ZW4gaHRtbCBzdHJpbmcgaW50byBhIG5vZGVcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXHJcbiAgICAgKiBAcmV0dXJucyB7Tm9kZX1cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGh0bWxUb0VsZW1lbnQoaHRtbCkge1xyXG4gICAgICAgIGNvbnN0IHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcclxuICAgICAgICByYW5nZS5zZWxlY3ROb2RlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSk7XHJcbiAgICAgICAgcmV0dXJuIHJhbmdlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChodG1sKS5maXJzdEVsZW1lbnRDaGlsZDtcclxuICAgIH07XHJcbn0iLCJjbGFzcyBpMThuIHtcclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgdGV4dCBmb3IgdGhlIHNwZWNpZmllZCBpZGVudGlmaWVyXHJcbiAgICAgKiBAcGFyYW0gaWRlbnRpZmllciBzdHJpbmdcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdldFRleHQoaWRlbnRpZmllcikge1xyXG4gICAgICAgIHJldHVybiB0ZXh0c1tpZGVudGlmaWVyXTtcclxuICAgIH07XHJcbn0iLCJjbGFzcyBKU09OVG9vbHMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb2RlIGZyb20gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI0MDc1NDMwXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBqc29uU3RyaW5naWZ5V2l0aG91dEN5Y2xlKG9iaiwgcmVwbGFjZXIsIHNwYWNlKSB7XHJcbiAgICAgICAgbGV0IGNhY2hlID0gW107XHJcbiAgICAgICAgY29uc3QganNvbiA9IEpTT04uc3RyaW5naWZ5KG9iaiwgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjYWNoZS5pbmRleE9mKHZhbHVlKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjaXJjdWxhciByZWZlcmVuY2UgZm91bmQsIGRpc2NhcmQga2V5XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gc3RvcmUgdmFsdWUgaW4gb3VyIGNvbGxlY3Rpb25cclxuICAgICAgICAgICAgICAgIGNhY2hlLnB1c2godmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXBsYWNlciA/IHJlcGxhY2VyKGtleSwgdmFsdWUpIDogdmFsdWU7XHJcbiAgICAgICAgfSwgc3BhY2UpO1xyXG4gICAgICAgIGNhY2hlID0gbnVsbDtcclxuICAgICAgICByZXR1cm4ganNvbjtcclxuICAgIH07XHJcbn0iLCIhZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKTp0LlBlcmZlY3RTY3JvbGxiYXI9ZSgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdCh0KXtyZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZSh0KX1mdW5jdGlvbiBlKHQsZSl7Zm9yKHZhciBpIGluIGUpe3ZhciByPWVbaV07XCJudW1iZXJcIj09dHlwZW9mIHImJihyKz1cInB4XCIpLHQuc3R5bGVbaV09cn1yZXR1cm4gdH1mdW5jdGlvbiBpKHQpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIGUuY2xhc3NOYW1lPXQsZX1mdW5jdGlvbiByKHQsZSl7aWYoIXYpdGhyb3cgbmV3IEVycm9yKFwiTm8gZWxlbWVudCBtYXRjaGluZyBtZXRob2Qgc3VwcG9ydGVkXCIpO3JldHVybiB2LmNhbGwodCxlKX1mdW5jdGlvbiBsKHQpe3QucmVtb3ZlP3QucmVtb3ZlKCk6dC5wYXJlbnROb2RlJiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCl9ZnVuY3Rpb24gbih0LGUpe3JldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwodC5jaGlsZHJlbixmdW5jdGlvbih0KXtyZXR1cm4gcih0LGUpfSl9ZnVuY3Rpb24gbyh0LGUpe3ZhciBpPXQuZWxlbWVudC5jbGFzc0xpc3Qscj1tLnN0YXRlLnNjcm9sbGluZyhlKTtpLmNvbnRhaW5zKHIpP2NsZWFyVGltZW91dChZW2VdKTppLmFkZChyKX1mdW5jdGlvbiBzKHQsZSl7WVtlXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHQuaXNBbGl2ZSYmdC5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUobS5zdGF0ZS5zY3JvbGxpbmcoZSkpfSx0LnNldHRpbmdzLnNjcm9sbGluZ1RocmVzaG9sZCl9ZnVuY3Rpb24gYSh0LGUpe28odCxlKSxzKHQsZSl9ZnVuY3Rpb24gYyh0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQpcmV0dXJuIG5ldyBDdXN0b21FdmVudCh0KTt2YXIgZT1kb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO3JldHVybiBlLmluaXRDdXN0b21FdmVudCh0LCExLCExLHZvaWQgMCksZX1mdW5jdGlvbiBoKHQsZSxpLHIsbCl7dmFyIG49aVswXSxvPWlbMV0scz1pWzJdLGg9aVszXSx1PWlbNF0sZD1pWzVdO3ZvaWQgMD09PXImJihyPSEwKSx2b2lkIDA9PT1sJiYobD0hMSk7dmFyIGY9dC5lbGVtZW50O3QucmVhY2hbaF09bnVsbCxmW3NdPDEmJih0LnJlYWNoW2hdPVwic3RhcnRcIiksZltzXT50W25dLXRbb10tMSYmKHQucmVhY2hbaF09XCJlbmRcIiksZSYmKGYuZGlzcGF0Y2hFdmVudChjKFwicHMtc2Nyb2xsLVwiK2gpKSxlPDA/Zi5kaXNwYXRjaEV2ZW50KGMoXCJwcy1zY3JvbGwtXCIrdSkpOmU+MCYmZi5kaXNwYXRjaEV2ZW50KGMoXCJwcy1zY3JvbGwtXCIrZCkpLHImJmEodCxoKSksdC5yZWFjaFtoXSYmKGV8fGwpJiZmLmRpc3BhdGNoRXZlbnQoYyhcInBzLVwiK2grXCItcmVhY2gtXCIrdC5yZWFjaFtoXSkpfWZ1bmN0aW9uIHUodCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfHwwfWZ1bmN0aW9uIGQodCl7cmV0dXJuIHIodCxcImlucHV0LFtjb250ZW50ZWRpdGFibGVdXCIpfHxyKHQsXCJzZWxlY3QsW2NvbnRlbnRlZGl0YWJsZV1cIil8fHIodCxcInRleHRhcmVhLFtjb250ZW50ZWRpdGFibGVdXCIpfHxyKHQsXCJidXR0b24sW2NvbnRlbnRlZGl0YWJsZV1cIil9ZnVuY3Rpb24gZihlKXt2YXIgaT10KGUpO3JldHVybiB1KGkud2lkdGgpK3UoaS5wYWRkaW5nTGVmdCkrdShpLnBhZGRpbmdSaWdodCkrdShpLmJvcmRlckxlZnRXaWR0aCkrdShpLmJvcmRlclJpZ2h0V2lkdGgpfWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4gdC5zZXR0aW5ncy5taW5TY3JvbGxiYXJMZW5ndGgmJihlPU1hdGgubWF4KGUsdC5zZXR0aW5ncy5taW5TY3JvbGxiYXJMZW5ndGgpKSx0LnNldHRpbmdzLm1heFNjcm9sbGJhckxlbmd0aCYmKGU9TWF0aC5taW4oZSx0LnNldHRpbmdzLm1heFNjcm9sbGJhckxlbmd0aCkpLGV9ZnVuY3Rpb24gYih0LGkpe3ZhciByPXt3aWR0aDppLnJhaWxYV2lkdGh9O2kuaXNSdGw/ci5sZWZ0PWkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50K3Quc2Nyb2xsTGVmdCtpLmNvbnRhaW5lcldpZHRoLWkuY29udGVudFdpZHRoOnIubGVmdD10LnNjcm9sbExlZnQsaS5pc1Njcm9sbGJhclhVc2luZ0JvdHRvbT9yLmJvdHRvbT1pLnNjcm9sbGJhclhCb3R0b20tdC5zY3JvbGxUb3A6ci50b3A9aS5zY3JvbGxiYXJYVG9wK3Quc2Nyb2xsVG9wLGUoaS5zY3JvbGxiYXJYUmFpbCxyKTt2YXIgbD17dG9wOnQuc2Nyb2xsVG9wLGhlaWdodDppLnJhaWxZSGVpZ2h0fTtpLmlzU2Nyb2xsYmFyWVVzaW5nUmlnaHQ/aS5pc1J0bD9sLnJpZ2h0PWkuY29udGVudFdpZHRoLShpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCt0LnNjcm9sbExlZnQpLWkuc2Nyb2xsYmFyWVJpZ2h0LWkuc2Nyb2xsYmFyWU91dGVyV2lkdGg6bC5yaWdodD1pLnNjcm9sbGJhcllSaWdodC10LnNjcm9sbExlZnQ6aS5pc1J0bD9sLmxlZnQ9aS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQrdC5zY3JvbGxMZWZ0KzIqaS5jb250YWluZXJXaWR0aC1pLmNvbnRlbnRXaWR0aC1pLnNjcm9sbGJhcllMZWZ0LWkuc2Nyb2xsYmFyWU91dGVyV2lkdGg6bC5sZWZ0PWkuc2Nyb2xsYmFyWUxlZnQrdC5zY3JvbGxMZWZ0LGUoaS5zY3JvbGxiYXJZUmFpbCxsKSxlKGkuc2Nyb2xsYmFyWCx7bGVmdDppLnNjcm9sbGJhclhMZWZ0LHdpZHRoOmkuc2Nyb2xsYmFyWFdpZHRoLWkucmFpbEJvcmRlclhXaWR0aH0pLGUoaS5zY3JvbGxiYXJZLHt0b3A6aS5zY3JvbGxiYXJZVG9wLGhlaWdodDppLnNjcm9sbGJhcllIZWlnaHQtaS5yYWlsQm9yZGVyWVdpZHRofSl9ZnVuY3Rpb24gZyh0LGUpe2Z1bmN0aW9uIGkoZSl7cFtkXT1iK3YqKGVbYV0tZyksbyh0LGYpLFQodCksZS5zdG9wUHJvcGFnYXRpb24oKSxlLnByZXZlbnREZWZhdWx0KCl9ZnVuY3Rpb24gcigpe3ModCxmKSx0LmV2ZW50LnVuYmluZCh0Lm93bmVyRG9jdW1lbnQsXCJtb3VzZW1vdmVcIixpKX12YXIgbD1lWzBdLG49ZVsxXSxhPWVbMl0sYz1lWzNdLGg9ZVs0XSx1PWVbNV0sZD1lWzZdLGY9ZVs3XSxwPXQuZWxlbWVudCxiPW51bGwsZz1udWxsLHY9bnVsbDt0LmV2ZW50LmJpbmQodFtoXSxcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpe2I9cFtkXSxnPWVbYV0sdj0odFtuXS10W2xdKS8odFtjXS10W3VdKSx0LmV2ZW50LmJpbmQodC5vd25lckRvY3VtZW50LFwibW91c2Vtb3ZlXCIsaSksdC5ldmVudC5vbmNlKHQub3duZXJEb2N1bWVudCxcIm1vdXNldXBcIixyKSxlLnN0b3BQcm9wYWdhdGlvbigpLGUucHJldmVudERlZmF1bHQoKX0pfXZhciB2PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBFbGVtZW50JiYoRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc3x8RWxlbWVudC5wcm90b3R5cGUud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxFbGVtZW50LnByb3RvdHlwZS5tc01hdGNoZXNTZWxlY3RvciksbT17bWFpbjpcInBzXCIsZWxlbWVudDp7dGh1bWI6ZnVuY3Rpb24odCl7cmV0dXJuXCJwc19fdGh1bWItXCIrdH0scmFpbDpmdW5jdGlvbih0KXtyZXR1cm5cInBzX19yYWlsLVwiK3R9LGNvbnN1bWluZzpcInBzX19jaGlsZC0tY29uc3VtZVwifSxzdGF0ZTp7Zm9jdXM6XCJwcy0tZm9jdXNcIixhY3RpdmU6ZnVuY3Rpb24odCl7cmV0dXJuXCJwcy0tYWN0aXZlLVwiK3R9LHNjcm9sbGluZzpmdW5jdGlvbih0KXtyZXR1cm5cInBzLS1zY3JvbGxpbmctXCIrdH19fSxZPXt4Om51bGwseTpudWxsfSxYPWZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudD10LHRoaXMuaGFuZGxlcnM9e319LHc9e2lzRW1wdHk6e2NvbmZpZ3VyYWJsZTohMH19O1gucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT10aGlzLmhhbmRsZXJzW3RdJiYodGhpcy5oYW5kbGVyc1t0XT1bXSksdGhpcy5oYW5kbGVyc1t0XS5wdXNoKGUpLHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKHQsZSwhMSl9LFgucHJvdG90eXBlLnVuYmluZD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXM7dGhpcy5oYW5kbGVyc1t0XT10aGlzLmhhbmRsZXJzW3RdLmZpbHRlcihmdW5jdGlvbihyKXtyZXR1cm4hKCFlfHxyPT09ZSl8fChpLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LHIsITEpLCExKX0pfSxYLnByb3RvdHlwZS51bmJpbmRBbGw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2Zvcih2YXIgZSBpbiB0LmhhbmRsZXJzKXQudW5iaW5kKGUpfSx3LmlzRW1wdHkuZ2V0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gT2JqZWN0LmtleXModGhpcy5oYW5kbGVycykuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT10LmhhbmRsZXJzW2VdLmxlbmd0aH0pfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhYLnByb3RvdHlwZSx3KTt2YXIgeT1mdW5jdGlvbigpe3RoaXMuZXZlbnRFbGVtZW50cz1bXX07eS5wcm90b3R5cGUuZXZlbnRFbGVtZW50PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZXZlbnRFbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudD09PXR9KVswXTtyZXR1cm4gZXx8KGU9bmV3IFgodCksdGhpcy5ldmVudEVsZW1lbnRzLnB1c2goZSkpLGV9LHkucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24odCxlLGkpe3RoaXMuZXZlbnRFbGVtZW50KHQpLmJpbmQoZSxpKX0seS5wcm90b3R5cGUudW5iaW5kPWZ1bmN0aW9uKHQsZSxpKXt2YXIgcj10aGlzLmV2ZW50RWxlbWVudCh0KTtyLnVuYmluZChlLGkpLHIuaXNFbXB0eSYmdGhpcy5ldmVudEVsZW1lbnRzLnNwbGljZSh0aGlzLmV2ZW50RWxlbWVudHMuaW5kZXhPZihyKSwxKX0seS5wcm90b3R5cGUudW5iaW5kQWxsPWZ1bmN0aW9uKCl7dGhpcy5ldmVudEVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHQudW5iaW5kQWxsKCl9KSx0aGlzLmV2ZW50RWxlbWVudHM9W119LHkucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24odCxlLGkpe3ZhciByPXRoaXMuZXZlbnRFbGVtZW50KHQpLGw9ZnVuY3Rpb24odCl7ci51bmJpbmQoZSxsKSxpKHQpfTtyLmJpbmQoZSxsKX07dmFyIFc9ZnVuY3Rpb24odCxlLGkscixsKXt2b2lkIDA9PT1yJiYocj0hMCksdm9pZCAwPT09bCYmKGw9ITEpO3ZhciBuO2lmKFwidG9wXCI9PT1lKW49W1wiY29udGVudEhlaWdodFwiLFwiY29udGFpbmVySGVpZ2h0XCIsXCJzY3JvbGxUb3BcIixcInlcIixcInVwXCIsXCJkb3duXCJdO2Vsc2V7aWYoXCJsZWZ0XCIhPT1lKXRocm93IG5ldyBFcnJvcihcIkEgcHJvcGVyIGF4aXMgc2hvdWxkIGJlIHByb3ZpZGVkXCIpO249W1wiY29udGVudFdpZHRoXCIsXCJjb250YWluZXJXaWR0aFwiLFwic2Nyb2xsTGVmdFwiLFwieFwiLFwibGVmdFwiLFwicmlnaHRcIl19aCh0LGksbixyLGwpfSxMPXtpc1dlYktpdDpcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQmJlwiV2Via2l0QXBwZWFyYW5jZVwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLHN1cHBvcnRzVG91Y2g6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKFwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3d8fHdpbmRvdy5Eb2N1bWVudFRvdWNoJiZkb2N1bWVudCBpbnN0YW5jZW9mIHdpbmRvdy5Eb2N1bWVudFRvdWNoKSxzdXBwb3J0c0llUG9pbnRlcjpcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyxpc0Nocm9tZTpcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiYvQ2hyb21lL2kudGVzdChuYXZpZ2F0b3ImJm5hdmlnYXRvci51c2VyQWdlbnQpfSxUPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZWxlbWVudDt0LmNvbnRhaW5lcldpZHRoPWUuY2xpZW50V2lkdGgsdC5jb250YWluZXJIZWlnaHQ9ZS5jbGllbnRIZWlnaHQsdC5jb250ZW50V2lkdGg9ZS5zY3JvbGxXaWR0aCx0LmNvbnRlbnRIZWlnaHQ9ZS5zY3JvbGxIZWlnaHQsZS5jb250YWlucyh0LnNjcm9sbGJhclhSYWlsKXx8KG4oZSxtLmVsZW1lbnQucmFpbChcInhcIikpLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGwodCl9KSxlLmFwcGVuZENoaWxkKHQuc2Nyb2xsYmFyWFJhaWwpKSxlLmNvbnRhaW5zKHQuc2Nyb2xsYmFyWVJhaWwpfHwobihlLG0uZWxlbWVudC5yYWlsKFwieVwiKSkuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gbCh0KX0pLGUuYXBwZW5kQ2hpbGQodC5zY3JvbGxiYXJZUmFpbCkpLCF0LnNldHRpbmdzLnN1cHByZXNzU2Nyb2xsWCYmdC5jb250YWluZXJXaWR0aCt0LnNldHRpbmdzLnNjcm9sbFhNYXJnaW5PZmZzZXQ8dC5jb250ZW50V2lkdGg/KHQuc2Nyb2xsYmFyWEFjdGl2ZT0hMCx0LnJhaWxYV2lkdGg9dC5jb250YWluZXJXaWR0aC10LnJhaWxYTWFyZ2luV2lkdGgsdC5yYWlsWFJhdGlvPXQuY29udGFpbmVyV2lkdGgvdC5yYWlsWFdpZHRoLHQuc2Nyb2xsYmFyWFdpZHRoPXAodCx1KHQucmFpbFhXaWR0aCp0LmNvbnRhaW5lcldpZHRoL3QuY29udGVudFdpZHRoKSksdC5zY3JvbGxiYXJYTGVmdD11KCh0Lm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCtlLnNjcm9sbExlZnQpKih0LnJhaWxYV2lkdGgtdC5zY3JvbGxiYXJYV2lkdGgpLyh0LmNvbnRlbnRXaWR0aC10LmNvbnRhaW5lcldpZHRoKSkpOnQuc2Nyb2xsYmFyWEFjdGl2ZT0hMSwhdC5zZXR0aW5ncy5zdXBwcmVzc1Njcm9sbFkmJnQuY29udGFpbmVySGVpZ2h0K3Quc2V0dGluZ3Muc2Nyb2xsWU1hcmdpbk9mZnNldDx0LmNvbnRlbnRIZWlnaHQ/KHQuc2Nyb2xsYmFyWUFjdGl2ZT0hMCx0LnJhaWxZSGVpZ2h0PXQuY29udGFpbmVySGVpZ2h0LXQucmFpbFlNYXJnaW5IZWlnaHQsdC5yYWlsWVJhdGlvPXQuY29udGFpbmVySGVpZ2h0L3QucmFpbFlIZWlnaHQsdC5zY3JvbGxiYXJZSGVpZ2h0PXAodCx1KHQucmFpbFlIZWlnaHQqdC5jb250YWluZXJIZWlnaHQvdC5jb250ZW50SGVpZ2h0KSksdC5zY3JvbGxiYXJZVG9wPXUoZS5zY3JvbGxUb3AqKHQucmFpbFlIZWlnaHQtdC5zY3JvbGxiYXJZSGVpZ2h0KS8odC5jb250ZW50SGVpZ2h0LXQuY29udGFpbmVySGVpZ2h0KSkpOnQuc2Nyb2xsYmFyWUFjdGl2ZT0hMSx0LnNjcm9sbGJhclhMZWZ0Pj10LnJhaWxYV2lkdGgtdC5zY3JvbGxiYXJYV2lkdGgmJih0LnNjcm9sbGJhclhMZWZ0PXQucmFpbFhXaWR0aC10LnNjcm9sbGJhclhXaWR0aCksdC5zY3JvbGxiYXJZVG9wPj10LnJhaWxZSGVpZ2h0LXQuc2Nyb2xsYmFyWUhlaWdodCYmKHQuc2Nyb2xsYmFyWVRvcD10LnJhaWxZSGVpZ2h0LXQuc2Nyb2xsYmFyWUhlaWdodCksYihlLHQpLHQuc2Nyb2xsYmFyWEFjdGl2ZT9lLmNsYXNzTGlzdC5hZGQobS5zdGF0ZS5hY3RpdmUoXCJ4XCIpKTooZS5jbGFzc0xpc3QucmVtb3ZlKG0uc3RhdGUuYWN0aXZlKFwieFwiKSksdC5zY3JvbGxiYXJYV2lkdGg9MCx0LnNjcm9sbGJhclhMZWZ0PTAsZS5zY3JvbGxMZWZ0PTApLHQuc2Nyb2xsYmFyWUFjdGl2ZT9lLmNsYXNzTGlzdC5hZGQobS5zdGF0ZS5hY3RpdmUoXCJ5XCIpKTooZS5jbGFzc0xpc3QucmVtb3ZlKG0uc3RhdGUuYWN0aXZlKFwieVwiKSksdC5zY3JvbGxiYXJZSGVpZ2h0PTAsdC5zY3JvbGxiYXJZVG9wPTAsZS5zY3JvbGxUb3A9MCl9LFI9e1wiY2xpY2stcmFpbFwiOmZ1bmN0aW9uKHQpe3QuZXZlbnQuYmluZCh0LnNjcm9sbGJhclksXCJtb3VzZWRvd25cIixmdW5jdGlvbih0KXtyZXR1cm4gdC5zdG9wUHJvcGFnYXRpb24oKX0pLHQuZXZlbnQuYmluZCh0LnNjcm9sbGJhcllSYWlsLFwibW91c2Vkb3duXCIsZnVuY3Rpb24oZSl7dmFyIGk9ZS5wYWdlWS13aW5kb3cucGFnZVlPZmZzZXQtdC5zY3JvbGxiYXJZUmFpbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A+dC5zY3JvbGxiYXJZVG9wPzE6LTE7dC5lbGVtZW50LnNjcm9sbFRvcCs9aSp0LmNvbnRhaW5lckhlaWdodCxUKHQpLGUuc3RvcFByb3BhZ2F0aW9uKCl9KSx0LmV2ZW50LmJpbmQodC5zY3JvbGxiYXJYLFwibW91c2Vkb3duXCIsZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RvcFByb3BhZ2F0aW9uKCl9KSx0LmV2ZW50LmJpbmQodC5zY3JvbGxiYXJYUmFpbCxcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpe3ZhciBpPWUucGFnZVgtd2luZG93LnBhZ2VYT2Zmc2V0LXQuc2Nyb2xsYmFyWFJhaWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdD50LnNjcm9sbGJhclhMZWZ0PzE6LTE7dC5lbGVtZW50LnNjcm9sbExlZnQrPWkqdC5jb250YWluZXJXaWR0aCxUKHQpLGUuc3RvcFByb3BhZ2F0aW9uKCl9KX0sXCJkcmFnLXRodW1iXCI6ZnVuY3Rpb24odCl7Zyh0LFtcImNvbnRhaW5lcldpZHRoXCIsXCJjb250ZW50V2lkdGhcIixcInBhZ2VYXCIsXCJyYWlsWFdpZHRoXCIsXCJzY3JvbGxiYXJYXCIsXCJzY3JvbGxiYXJYV2lkdGhcIixcInNjcm9sbExlZnRcIixcInhcIl0pLGcodCxbXCJjb250YWluZXJIZWlnaHRcIixcImNvbnRlbnRIZWlnaHRcIixcInBhZ2VZXCIsXCJyYWlsWUhlaWdodFwiLFwic2Nyb2xsYmFyWVwiLFwic2Nyb2xsYmFyWUhlaWdodFwiLFwic2Nyb2xsVG9wXCIsXCJ5XCJdKX0sa2V5Ym9hcmQ6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLHIpe3ZhciBsPWkuc2Nyb2xsVG9wO2lmKDA9PT1lKXtpZighdC5zY3JvbGxiYXJZQWN0aXZlKXJldHVybiExO2lmKDA9PT1sJiZyPjB8fGw+PXQuY29udGVudEhlaWdodC10LmNvbnRhaW5lckhlaWdodCYmcjwwKXJldHVybiF0LnNldHRpbmdzLndoZWVsUHJvcGFnYXRpb259dmFyIG49aS5zY3JvbGxMZWZ0O2lmKDA9PT1yKXtpZighdC5zY3JvbGxiYXJYQWN0aXZlKXJldHVybiExO2lmKDA9PT1uJiZlPDB8fG4+PXQuY29udGVudFdpZHRoLXQuY29udGFpbmVyV2lkdGgmJmU+MClyZXR1cm4hdC5zZXR0aW5ncy53aGVlbFByb3BhZ2F0aW9ufXJldHVybiEwfXZhciBpPXQuZWxlbWVudCxsPWZ1bmN0aW9uKCl7cmV0dXJuIHIoaSxcIjpob3ZlclwiKX0sbj1mdW5jdGlvbigpe3JldHVybiByKHQuc2Nyb2xsYmFyWCxcIjpmb2N1c1wiKXx8cih0LnNjcm9sbGJhclksXCI6Zm9jdXNcIil9O3QuZXZlbnQuYmluZCh0Lm93bmVyRG9jdW1lbnQsXCJrZXlkb3duXCIsZnVuY3Rpb24ocil7aWYoIShyLmlzRGVmYXVsdFByZXZlbnRlZCYmci5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8ci5kZWZhdWx0UHJldmVudGVkKSYmKGwoKXx8bigpKSl7dmFyIG89ZG9jdW1lbnQuYWN0aXZlRWxlbWVudD9kb2N1bWVudC5hY3RpdmVFbGVtZW50OnQub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50O2lmKG8pe2lmKFwiSUZSQU1FXCI9PT1vLnRhZ05hbWUpbz1vLmNvbnRlbnREb2N1bWVudC5hY3RpdmVFbGVtZW50O2Vsc2UgZm9yKDtvLnNoYWRvd1Jvb3Q7KW89by5zaGFkb3dSb290LmFjdGl2ZUVsZW1lbnQ7aWYoZChvKSlyZXR1cm59dmFyIHM9MCxhPTA7c3dpdGNoKHIud2hpY2gpe2Nhc2UgMzc6cz1yLm1ldGFLZXk/LXQuY29udGVudFdpZHRoOnIuYWx0S2V5Py10LmNvbnRhaW5lcldpZHRoOi0zMDticmVhaztjYXNlIDM4OmE9ci5tZXRhS2V5P3QuY29udGVudEhlaWdodDpyLmFsdEtleT90LmNvbnRhaW5lckhlaWdodDozMDticmVhaztjYXNlIDM5OnM9ci5tZXRhS2V5P3QuY29udGVudFdpZHRoOnIuYWx0S2V5P3QuY29udGFpbmVyV2lkdGg6MzA7YnJlYWs7Y2FzZSA0MDphPXIubWV0YUtleT8tdC5jb250ZW50SGVpZ2h0OnIuYWx0S2V5Py10LmNvbnRhaW5lckhlaWdodDotMzA7YnJlYWs7Y2FzZSAzMjphPXIuc2hpZnRLZXk/dC5jb250YWluZXJIZWlnaHQ6LXQuY29udGFpbmVySGVpZ2h0O2JyZWFrO2Nhc2UgMzM6YT10LmNvbnRhaW5lckhlaWdodDticmVhaztjYXNlIDM0OmE9LXQuY29udGFpbmVySGVpZ2h0O2JyZWFrO2Nhc2UgMzY6YT10LmNvbnRlbnRIZWlnaHQ7YnJlYWs7Y2FzZSAzNTphPS10LmNvbnRlbnRIZWlnaHQ7YnJlYWs7ZGVmYXVsdDpyZXR1cm59dC5zZXR0aW5ncy5zdXBwcmVzc1Njcm9sbFgmJjAhPT1zfHx0LnNldHRpbmdzLnN1cHByZXNzU2Nyb2xsWSYmMCE9PWF8fChpLnNjcm9sbFRvcC09YSxpLnNjcm9sbExlZnQrPXMsVCh0KSxlKHMsYSkmJnIucHJldmVudERlZmF1bHQoKSl9fSl9LHdoZWVsOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkodCxpKXt2YXIgcj0wPT09by5zY3JvbGxUb3AsbD1vLnNjcm9sbFRvcCtvLm9mZnNldEhlaWdodD09PW8uc2Nyb2xsSGVpZ2h0LG49MD09PW8uc2Nyb2xsTGVmdCxzPW8uc2Nyb2xsTGVmdCtvLm9mZnNldFdpZHRoPT09by5vZmZzZXRXaWR0aDtyZXR1cm4hKE1hdGguYWJzKGkpPk1hdGguYWJzKHQpP3J8fGw6bnx8cyl8fCFlLnNldHRpbmdzLndoZWVsUHJvcGFnYXRpb259ZnVuY3Rpb24gcih0KXt2YXIgZT10LmRlbHRhWCxpPS0xKnQuZGVsdGFZO3JldHVybiB2b2lkIDAhPT1lJiZ2b2lkIDAhPT1pfHwoZT0tMSp0LndoZWVsRGVsdGFYLzYsaT10LndoZWVsRGVsdGFZLzYpLHQuZGVsdGFNb2RlJiYxPT09dC5kZWx0YU1vZGUmJihlKj0xMCxpKj0xMCksZSE9PWUmJmkhPT1pJiYoZT0wLGk9dC53aGVlbERlbHRhKSx0LnNoaWZ0S2V5P1staSwtZV06W2UsaV19ZnVuY3Rpb24gbChlLGkscil7aWYoIUwuaXNXZWJLaXQmJm8ucXVlcnlTZWxlY3RvcihcInNlbGVjdDpmb2N1c1wiKSlyZXR1cm4hMDtpZighby5jb250YWlucyhlKSlyZXR1cm4hMTtmb3IodmFyIGw9ZTtsJiZsIT09bzspe2lmKGwuY2xhc3NMaXN0LmNvbnRhaW5zKG0uZWxlbWVudC5jb25zdW1pbmcpKXJldHVybiEwO3ZhciBuPXQobCk7aWYoW24ub3ZlcmZsb3csbi5vdmVyZmxvd1gsbi5vdmVyZmxvd1ldLmpvaW4oXCJcIikubWF0Y2goLyhzY3JvbGx8YXV0bykvKSl7dmFyIHM9bC5zY3JvbGxIZWlnaHQtbC5jbGllbnRIZWlnaHQ7aWYocz4wJiYhKDA9PT1sLnNjcm9sbFRvcCYmcj4wfHxsLnNjcm9sbFRvcD09PXMmJnI8MCkpcmV0dXJuITA7dmFyIGE9bC5zY3JvbGxMZWZ0LWwuY2xpZW50V2lkdGg7aWYoYT4wJiYhKDA9PT1sLnNjcm9sbExlZnQmJmk8MHx8bC5zY3JvbGxMZWZ0PT09YSYmaT4wKSlyZXR1cm4hMH1sPWwucGFyZW50Tm9kZX1yZXR1cm4hMX1mdW5jdGlvbiBuKHQpe3ZhciBuPXIodCkscz1uWzBdLGE9blsxXTtpZighbCh0LnRhcmdldCxzLGEpKXt2YXIgYz0hMTtlLnNldHRpbmdzLnVzZUJvdGhXaGVlbEF4ZXM/ZS5zY3JvbGxiYXJZQWN0aXZlJiYhZS5zY3JvbGxiYXJYQWN0aXZlPyhhP28uc2Nyb2xsVG9wLT1hKmUuc2V0dGluZ3Mud2hlZWxTcGVlZDpvLnNjcm9sbFRvcCs9cyplLnNldHRpbmdzLndoZWVsU3BlZWQsYz0hMCk6ZS5zY3JvbGxiYXJYQWN0aXZlJiYhZS5zY3JvbGxiYXJZQWN0aXZlJiYocz9vLnNjcm9sbExlZnQrPXMqZS5zZXR0aW5ncy53aGVlbFNwZWVkOm8uc2Nyb2xsTGVmdC09YSplLnNldHRpbmdzLndoZWVsU3BlZWQsYz0hMCk6KG8uc2Nyb2xsVG9wLT1hKmUuc2V0dGluZ3Mud2hlZWxTcGVlZCxvLnNjcm9sbExlZnQrPXMqZS5zZXR0aW5ncy53aGVlbFNwZWVkKSxUKGUpLChjPWN8fGkocyxhKSkmJiF0LmN0cmxLZXkmJih0LnN0b3BQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSl9fXZhciBvPWUuZWxlbWVudDt2b2lkIDAhPT13aW5kb3cub253aGVlbD9lLmV2ZW50LmJpbmQobyxcIndoZWVsXCIsbik6dm9pZCAwIT09d2luZG93Lm9ubW91c2V3aGVlbCYmZS5ldmVudC5iaW5kKG8sXCJtb3VzZXdoZWVsXCIsbil9LHRvdWNoOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkodCxpKXt2YXIgcj1oLnNjcm9sbFRvcCxsPWguc2Nyb2xsTGVmdCxuPU1hdGguYWJzKHQpLG89TWF0aC5hYnMoaSk7aWYobz5uKXtpZihpPDAmJnI9PT1lLmNvbnRlbnRIZWlnaHQtZS5jb250YWluZXJIZWlnaHR8fGk+MCYmMD09PXIpcmV0dXJuIDA9PT13aW5kb3cuc2Nyb2xsWSYmaT4wJiZMLmlzQ2hyb21lfWVsc2UgaWYobj5vJiYodDwwJiZsPT09ZS5jb250ZW50V2lkdGgtZS5jb250YWluZXJXaWR0aHx8dD4wJiYwPT09bCkpcmV0dXJuITA7cmV0dXJuITB9ZnVuY3Rpb24gcih0LGkpe2guc2Nyb2xsVG9wLT1pLGguc2Nyb2xsTGVmdC09dCxUKGUpfWZ1bmN0aW9uIGwodCl7cmV0dXJuIHQudGFyZ2V0VG91Y2hlcz90LnRhcmdldFRvdWNoZXNbMF06dH1mdW5jdGlvbiBuKHQpe3JldHVybiEodC5wb2ludGVyVHlwZSYmXCJwZW5cIj09PXQucG9pbnRlclR5cGUmJjA9PT10LmJ1dHRvbnN8fCghdC50YXJnZXRUb3VjaGVzfHwxIT09dC50YXJnZXRUb3VjaGVzLmxlbmd0aCkmJighdC5wb2ludGVyVHlwZXx8XCJtb3VzZVwiPT09dC5wb2ludGVyVHlwZXx8dC5wb2ludGVyVHlwZT09PXQuTVNQT0lOVEVSX1RZUEVfTU9VU0UpKX1mdW5jdGlvbiBvKHQpe2lmKG4odCkpe3ZhciBlPWwodCk7dS5wYWdlWD1lLnBhZ2VYLHUucGFnZVk9ZS5wYWdlWSxkPShuZXcgRGF0ZSkuZ2V0VGltZSgpLG51bGwhPT1wJiZjbGVhckludGVydmFsKHApfX1mdW5jdGlvbiBzKGUsaSxyKXtpZighaC5jb250YWlucyhlKSlyZXR1cm4hMTtmb3IodmFyIGw9ZTtsJiZsIT09aDspe2lmKGwuY2xhc3NMaXN0LmNvbnRhaW5zKG0uZWxlbWVudC5jb25zdW1pbmcpKXJldHVybiEwO3ZhciBuPXQobCk7aWYoW24ub3ZlcmZsb3csbi5vdmVyZmxvd1gsbi5vdmVyZmxvd1ldLmpvaW4oXCJcIikubWF0Y2goLyhzY3JvbGx8YXV0bykvKSl7dmFyIG89bC5zY3JvbGxIZWlnaHQtbC5jbGllbnRIZWlnaHQ7aWYobz4wJiYhKDA9PT1sLnNjcm9sbFRvcCYmcj4wfHxsLnNjcm9sbFRvcD09PW8mJnI8MCkpcmV0dXJuITA7dmFyIHM9bC5zY3JvbGxMZWZ0LWwuY2xpZW50V2lkdGg7aWYocz4wJiYhKDA9PT1sLnNjcm9sbExlZnQmJmk8MHx8bC5zY3JvbGxMZWZ0PT09cyYmaT4wKSlyZXR1cm4hMH1sPWwucGFyZW50Tm9kZX1yZXR1cm4hMX1mdW5jdGlvbiBhKHQpe2lmKG4odCkpe3ZhciBlPWwodCksbz17cGFnZVg6ZS5wYWdlWCxwYWdlWTplLnBhZ2VZfSxhPW8ucGFnZVgtdS5wYWdlWCxjPW8ucGFnZVktdS5wYWdlWTtpZihzKHQudGFyZ2V0LGEsYykpcmV0dXJuO3IoYSxjKSx1PW87dmFyIGg9KG5ldyBEYXRlKS5nZXRUaW1lKCkscD1oLWQ7cD4wJiYoZi54PWEvcCxmLnk9Yy9wLGQ9aCksaShhLGMpJiZ0LnByZXZlbnREZWZhdWx0KCl9fWZ1bmN0aW9uIGMoKXtlLnNldHRpbmdzLnN3aXBlRWFzaW5nJiYoY2xlYXJJbnRlcnZhbChwKSxwPXNldEludGVydmFsKGZ1bmN0aW9uKCl7ZS5pc0luaXRpYWxpemVkP2NsZWFySW50ZXJ2YWwocCk6Zi54fHxmLnk/TWF0aC5hYnMoZi54KTwuMDEmJk1hdGguYWJzKGYueSk8LjAxP2NsZWFySW50ZXJ2YWwocCk6KHIoMzAqZi54LDMwKmYueSksZi54Kj0uOCxmLnkqPS44KTpjbGVhckludGVydmFsKHApfSwxMCkpfWlmKEwuc3VwcG9ydHNUb3VjaHx8TC5zdXBwb3J0c0llUG9pbnRlcil7dmFyIGg9ZS5lbGVtZW50LHU9e30sZD0wLGY9e30scD1udWxsO0wuc3VwcG9ydHNUb3VjaD8oZS5ldmVudC5iaW5kKGgsXCJ0b3VjaHN0YXJ0XCIsbyksZS5ldmVudC5iaW5kKGgsXCJ0b3VjaG1vdmVcIixhKSxlLmV2ZW50LmJpbmQoaCxcInRvdWNoZW5kXCIsYykpOkwuc3VwcG9ydHNJZVBvaW50ZXImJih3aW5kb3cuUG9pbnRlckV2ZW50PyhlLmV2ZW50LmJpbmQoaCxcInBvaW50ZXJkb3duXCIsbyksZS5ldmVudC5iaW5kKGgsXCJwb2ludGVybW92ZVwiLGEpLGUuZXZlbnQuYmluZChoLFwicG9pbnRlcnVwXCIsYykpOndpbmRvdy5NU1BvaW50ZXJFdmVudCYmKGUuZXZlbnQuYmluZChoLFwiTVNQb2ludGVyRG93blwiLG8pLGUuZXZlbnQuYmluZChoLFwiTVNQb2ludGVyTW92ZVwiLGEpLGUuZXZlbnQuYmluZChoLFwiTVNQb2ludGVyVXBcIixjKSkpfX19LEg9ZnVuY3Rpb24ocixsKXt2YXIgbj10aGlzO2lmKHZvaWQgMD09PWwmJihsPXt9KSxcInN0cmluZ1wiPT10eXBlb2YgciYmKHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihyKSksIXJ8fCFyLm5vZGVOYW1lKXRocm93IG5ldyBFcnJvcihcIm5vIGVsZW1lbnQgaXMgc3BlY2lmaWVkIHRvIGluaXRpYWxpemUgUGVyZmVjdFNjcm9sbGJhclwiKTt0aGlzLmVsZW1lbnQ9cixyLmNsYXNzTGlzdC5hZGQobS5tYWluKSx0aGlzLnNldHRpbmdzPXtoYW5kbGVyczpbXCJjbGljay1yYWlsXCIsXCJkcmFnLXRodW1iXCIsXCJrZXlib2FyZFwiLFwid2hlZWxcIixcInRvdWNoXCJdLG1heFNjcm9sbGJhckxlbmd0aDpudWxsLG1pblNjcm9sbGJhckxlbmd0aDpudWxsLHNjcm9sbGluZ1RocmVzaG9sZDoxZTMsc2Nyb2xsWE1hcmdpbk9mZnNldDowLHNjcm9sbFlNYXJnaW5PZmZzZXQ6MCxzdXBwcmVzc1Njcm9sbFg6ITEsc3VwcHJlc3NTY3JvbGxZOiExLHN3aXBlRWFzaW5nOiEwLHVzZUJvdGhXaGVlbEF4ZXM6ITEsd2hlZWxQcm9wYWdhdGlvbjohMSx3aGVlbFNwZWVkOjF9O2Zvcih2YXIgbyBpbiBsKW4uc2V0dGluZ3Nbb109bFtvXTt0aGlzLmNvbnRhaW5lcldpZHRoPW51bGwsdGhpcy5jb250YWluZXJIZWlnaHQ9bnVsbCx0aGlzLmNvbnRlbnRXaWR0aD1udWxsLHRoaXMuY29udGVudEhlaWdodD1udWxsO3ZhciBzPWZ1bmN0aW9uKCl7cmV0dXJuIHIuY2xhc3NMaXN0LmFkZChtLnN0YXRlLmZvY3VzKX0sYT1mdW5jdGlvbigpe3JldHVybiByLmNsYXNzTGlzdC5yZW1vdmUobS5zdGF0ZS5mb2N1cyl9O3RoaXMuaXNSdGw9XCJydGxcIj09PXQocikuZGlyZWN0aW9uLHRoaXMuaXNOZWdhdGl2ZVNjcm9sbD1mdW5jdGlvbigpe3ZhciB0PXIuc2Nyb2xsTGVmdCxlPW51bGw7cmV0dXJuIHIuc2Nyb2xsTGVmdD0tMSxlPXIuc2Nyb2xsTGVmdDwwLHIuc2Nyb2xsTGVmdD10LGV9KCksdGhpcy5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQ9dGhpcy5pc05lZ2F0aXZlU2Nyb2xsP3Iuc2Nyb2xsV2lkdGgtci5jbGllbnRXaWR0aDowLHRoaXMuZXZlbnQ9bmV3IHksdGhpcy5vd25lckRvY3VtZW50PXIub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQsdGhpcy5zY3JvbGxiYXJYUmFpbD1pKG0uZWxlbWVudC5yYWlsKFwieFwiKSksci5hcHBlbmRDaGlsZCh0aGlzLnNjcm9sbGJhclhSYWlsKSx0aGlzLnNjcm9sbGJhclg9aShtLmVsZW1lbnQudGh1bWIoXCJ4XCIpKSx0aGlzLnNjcm9sbGJhclhSYWlsLmFwcGVuZENoaWxkKHRoaXMuc2Nyb2xsYmFyWCksdGhpcy5zY3JvbGxiYXJYLnNldEF0dHJpYnV0ZShcInRhYmluZGV4XCIsMCksdGhpcy5ldmVudC5iaW5kKHRoaXMuc2Nyb2xsYmFyWCxcImZvY3VzXCIscyksdGhpcy5ldmVudC5iaW5kKHRoaXMuc2Nyb2xsYmFyWCxcImJsdXJcIixhKSx0aGlzLnNjcm9sbGJhclhBY3RpdmU9bnVsbCx0aGlzLnNjcm9sbGJhclhXaWR0aD1udWxsLHRoaXMuc2Nyb2xsYmFyWExlZnQ9bnVsbDt2YXIgYz10KHRoaXMuc2Nyb2xsYmFyWFJhaWwpO3RoaXMuc2Nyb2xsYmFyWEJvdHRvbT1wYXJzZUludChjLmJvdHRvbSwxMCksaXNOYU4odGhpcy5zY3JvbGxiYXJYQm90dG9tKT8odGhpcy5pc1Njcm9sbGJhclhVc2luZ0JvdHRvbT0hMSx0aGlzLnNjcm9sbGJhclhUb3A9dShjLnRvcCkpOnRoaXMuaXNTY3JvbGxiYXJYVXNpbmdCb3R0b209ITAsdGhpcy5yYWlsQm9yZGVyWFdpZHRoPXUoYy5ib3JkZXJMZWZ0V2lkdGgpK3UoYy5ib3JkZXJSaWdodFdpZHRoKSxlKHRoaXMuc2Nyb2xsYmFyWFJhaWwse2Rpc3BsYXk6XCJibG9ja1wifSksdGhpcy5yYWlsWE1hcmdpbldpZHRoPXUoYy5tYXJnaW5MZWZ0KSt1KGMubWFyZ2luUmlnaHQpLGUodGhpcy5zY3JvbGxiYXJYUmFpbCx7ZGlzcGxheTpcIlwifSksdGhpcy5yYWlsWFdpZHRoPW51bGwsdGhpcy5yYWlsWFJhdGlvPW51bGwsdGhpcy5zY3JvbGxiYXJZUmFpbD1pKG0uZWxlbWVudC5yYWlsKFwieVwiKSksci5hcHBlbmRDaGlsZCh0aGlzLnNjcm9sbGJhcllSYWlsKSx0aGlzLnNjcm9sbGJhclk9aShtLmVsZW1lbnQudGh1bWIoXCJ5XCIpKSx0aGlzLnNjcm9sbGJhcllSYWlsLmFwcGVuZENoaWxkKHRoaXMuc2Nyb2xsYmFyWSksdGhpcy5zY3JvbGxiYXJZLnNldEF0dHJpYnV0ZShcInRhYmluZGV4XCIsMCksdGhpcy5ldmVudC5iaW5kKHRoaXMuc2Nyb2xsYmFyWSxcImZvY3VzXCIscyksdGhpcy5ldmVudC5iaW5kKHRoaXMuc2Nyb2xsYmFyWSxcImJsdXJcIixhKSx0aGlzLnNjcm9sbGJhcllBY3RpdmU9bnVsbCx0aGlzLnNjcm9sbGJhcllIZWlnaHQ9bnVsbCx0aGlzLnNjcm9sbGJhcllUb3A9bnVsbDt2YXIgaD10KHRoaXMuc2Nyb2xsYmFyWVJhaWwpO3RoaXMuc2Nyb2xsYmFyWVJpZ2h0PXBhcnNlSW50KGgucmlnaHQsMTApLGlzTmFOKHRoaXMuc2Nyb2xsYmFyWVJpZ2h0KT8odGhpcy5pc1Njcm9sbGJhcllVc2luZ1JpZ2h0PSExLHRoaXMuc2Nyb2xsYmFyWUxlZnQ9dShoLmxlZnQpKTp0aGlzLmlzU2Nyb2xsYmFyWVVzaW5nUmlnaHQ9ITAsdGhpcy5zY3JvbGxiYXJZT3V0ZXJXaWR0aD10aGlzLmlzUnRsP2YodGhpcy5zY3JvbGxiYXJZKTpudWxsLHRoaXMucmFpbEJvcmRlcllXaWR0aD11KGguYm9yZGVyVG9wV2lkdGgpK3UoaC5ib3JkZXJCb3R0b21XaWR0aCksZSh0aGlzLnNjcm9sbGJhcllSYWlsLHtkaXNwbGF5OlwiYmxvY2tcIn0pLHRoaXMucmFpbFlNYXJnaW5IZWlnaHQ9dShoLm1hcmdpblRvcCkrdShoLm1hcmdpbkJvdHRvbSksZSh0aGlzLnNjcm9sbGJhcllSYWlsLHtkaXNwbGF5OlwiXCJ9KSx0aGlzLnJhaWxZSGVpZ2h0PW51bGwsdGhpcy5yYWlsWVJhdGlvPW51bGwsdGhpcy5yZWFjaD17eDpyLnNjcm9sbExlZnQ8PTA/XCJzdGFydFwiOnIuc2Nyb2xsTGVmdD49dGhpcy5jb250ZW50V2lkdGgtdGhpcy5jb250YWluZXJXaWR0aD9cImVuZFwiOm51bGwseTpyLnNjcm9sbFRvcDw9MD9cInN0YXJ0XCI6ci5zY3JvbGxUb3A+PXRoaXMuY29udGVudEhlaWdodC10aGlzLmNvbnRhaW5lckhlaWdodD9cImVuZFwiOm51bGx9LHRoaXMuaXNBbGl2ZT0hMCx0aGlzLnNldHRpbmdzLmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIFJbdF0obil9KSx0aGlzLmxhc3RTY3JvbGxUb3A9ci5zY3JvbGxUb3AsdGhpcy5sYXN0U2Nyb2xsTGVmdD1yLnNjcm9sbExlZnQsdGhpcy5ldmVudC5iaW5kKHRoaXMuZWxlbWVudCxcInNjcm9sbFwiLGZ1bmN0aW9uKHQpe3JldHVybiBuLm9uU2Nyb2xsKHQpfSksVCh0aGlzKX07cmV0dXJuIEgucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuaXNBbGl2ZSYmKHRoaXMubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50PXRoaXMuaXNOZWdhdGl2ZVNjcm9sbD90aGlzLmVsZW1lbnQuc2Nyb2xsV2lkdGgtdGhpcy5lbGVtZW50LmNsaWVudFdpZHRoOjAsZSh0aGlzLnNjcm9sbGJhclhSYWlsLHtkaXNwbGF5OlwiYmxvY2tcIn0pLGUodGhpcy5zY3JvbGxiYXJZUmFpbCx7ZGlzcGxheTpcImJsb2NrXCJ9KSx0aGlzLnJhaWxYTWFyZ2luV2lkdGg9dSh0KHRoaXMuc2Nyb2xsYmFyWFJhaWwpLm1hcmdpbkxlZnQpK3UodCh0aGlzLnNjcm9sbGJhclhSYWlsKS5tYXJnaW5SaWdodCksdGhpcy5yYWlsWU1hcmdpbkhlaWdodD11KHQodGhpcy5zY3JvbGxiYXJZUmFpbCkubWFyZ2luVG9wKSt1KHQodGhpcy5zY3JvbGxiYXJZUmFpbCkubWFyZ2luQm90dG9tKSxlKHRoaXMuc2Nyb2xsYmFyWFJhaWwse2Rpc3BsYXk6XCJub25lXCJ9KSxlKHRoaXMuc2Nyb2xsYmFyWVJhaWwse2Rpc3BsYXk6XCJub25lXCJ9KSxUKHRoaXMpLFcodGhpcyxcInRvcFwiLDAsITEsITApLFcodGhpcyxcImxlZnRcIiwwLCExLCEwKSxlKHRoaXMuc2Nyb2xsYmFyWFJhaWwse2Rpc3BsYXk6XCJcIn0pLGUodGhpcy5zY3JvbGxiYXJZUmFpbCx7ZGlzcGxheTpcIlwifSkpfSxILnByb3RvdHlwZS5vblNjcm9sbD1mdW5jdGlvbih0KXt0aGlzLmlzQWxpdmUmJihUKHRoaXMpLFcodGhpcyxcInRvcFwiLHRoaXMuZWxlbWVudC5zY3JvbGxUb3AtdGhpcy5sYXN0U2Nyb2xsVG9wKSxXKHRoaXMsXCJsZWZ0XCIsdGhpcy5lbGVtZW50LnNjcm9sbExlZnQtdGhpcy5sYXN0U2Nyb2xsTGVmdCksdGhpcy5sYXN0U2Nyb2xsVG9wPXRoaXMuZWxlbWVudC5zY3JvbGxUb3AsdGhpcy5sYXN0U2Nyb2xsTGVmdD10aGlzLmVsZW1lbnQuc2Nyb2xsTGVmdCl9LEgucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLmlzQWxpdmUmJih0aGlzLmV2ZW50LnVuYmluZEFsbCgpLGwodGhpcy5zY3JvbGxiYXJYKSxsKHRoaXMuc2Nyb2xsYmFyWSksbCh0aGlzLnNjcm9sbGJhclhSYWlsKSxsKHRoaXMuc2Nyb2xsYmFyWVJhaWwpLHRoaXMucmVtb3ZlUHNDbGFzc2VzKCksdGhpcy5lbGVtZW50PW51bGwsdGhpcy5zY3JvbGxiYXJYPW51bGwsdGhpcy5zY3JvbGxiYXJZPW51bGwsdGhpcy5zY3JvbGxiYXJYUmFpbD1udWxsLHRoaXMuc2Nyb2xsYmFyWVJhaWw9bnVsbCx0aGlzLmlzQWxpdmU9ITEpfSxILnByb3RvdHlwZS5yZW1vdmVQc0NsYXNzZXM9ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuY2xhc3NOYW1lPXRoaXMuZWxlbWVudC5jbGFzc05hbWUuc3BsaXQoXCIgXCIpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hdC5tYXRjaCgvXnBzKFstX10uK3wpJC8pfSkuam9pbihcIiBcIil9LEh9KTsiLCIoZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3Qgc2Nyb2xsSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ob3Jpem9udGFsJyk7XHJcbiAgICBpZiAoc2Nyb2xsSXRlbSkge1xyXG4gICAgICAgIHNjcm9sbEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignd2hlZWwnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWUuZGVsdGFYKSB7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxJdGVtLnNjcm9sbEJ5KHtcclxuICAgICAgICAgICAgICAgICAgICBiZWhhdmlvcjogJ2F1dG8nLFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IGUuZGVsdGFZID4gMCA/IDEwMCA6IC0xMDBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc2Nyb2xscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXNjcm9sbF0nKTtcclxuICAgIHNjcm9sbHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgIG5ldyBQZXJmZWN0U2Nyb2xsYmFyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbn0oKSk7Il19
